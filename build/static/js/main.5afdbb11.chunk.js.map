{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/Resort.js","Components/Resorts.js","Components/Alarm.js","Components/NewAlarmCondition.js","Components/NewAlarmAmount.js","Components/Hour.js","Components/Hourly.js","Components/NewAlarm.js","Components/Alarms.js","Components/Updated.js","Components/WindDirection.js","Components/ForecastSelector.js","Components/Forecast.js","Components/Map.js","Components/ResortInfo.js","App.js","index.js"],"names":["Header","className","Footer","resorts","changePage","currentPage","closePopUps","iconHighlight","icon","onClick","title","style","color","length","Resort","resort","showResort","removeResort","setPage","name","Array","isArray","regions","area","region","id","Object","keys","alarms","Resorts","setResorts","openSearch","setOpenSearch","setSearchInput","searchInput","setResortInfo","useState","allResorts","setAllResorts","tempWeather","data","request","query","type","weather","astronomy","bottom","maxtempC","maxtempF","mintempC","mintempF","chanceofsnow","date","hourly","tempC","tempF","weatherCode","weatherDesc","value","weatherIconUrl","winddir16Point","winddirDegree","windspeedKmph","windspeedMiles","cloudcover","freezeLevel","humidity","mid","precipInches","precipMM","pressure","pressureInches","snowfall_cm","time","top","visibility","visibilityMiles","totalSnowfall_cm","useEffect","axios","get","then","res","catch","error","alert","filter","filteredResorts","toLowerCase","includes","selected","resortId","forEach","map","placeholder","onChange","e","target","find","newResort","lastCheck","addResort","alarm","toggleAlarm","removeAlarm","forecastConditions","toggled","console","log","condition","limit","NewAlarmCondition","conditions","setConditions","NewAlarmAmount","amount","setAmount","con","unit","Hour","Hourly","param","hours","getParam","hour","entries","key","Math","random","NewAlarm","newAlarm","setNewAlarm","handleSubmit","push","pushAlarm","addRecentConditions","action","Alarms","showList","setShowList","alarmId","newAlarms","alarmMap","Alarm","opacity","addAlarm","Updated","floor","Date","now","WindDirection","ForecastSelector","setResort","changeResort","direction","current","indexOf","Forecast","Map","link","resortMap","setMap","href","original","url","rel","src","image","sizes","alt","ResortInfo","viewMap","officialWebsite","App","page","searchBox","setSearchBox","resortInfo","setResortMap","data1","localStorage","getItem","JSON","parse","data2","setItem","stringify","ski_maps","media","lat","parseFloat","georeferencing","toFixed","lng","updatedResort","getWeather","renderSwitch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5afdbb11.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n\t\t<div className=\"header\">\r\n\t\t\t{/* Search button */}\r\n\t\t\t{/* <i className=\"searchButton fas fa-search menuIcon\" ></i> */}\r\n      <p className='headerTitle'>SnoWoke</p>\r\n\t\t\t{/* Settings button */}\r\n\t\t\t{/* <i className=\"settingsButton fas fa-cog menuIcon\"></i> */}\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default Header\r\n","const Footer = ({ resorts, changePage, currentPage, closePopUps }) => {\r\n\tconst iconHighlight = (icon) => {\r\n\t\treturn icon === currentPage ? \"#1e3a5c\" : \"\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"footer\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\tclosePopUps();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<i\r\n\t\t\t\tclassName=\"fas fa-mountain menuIcon\"\r\n\t\t\t\ttitle=\"Resorts\"\r\n\t\t\t\tonClick={() => changePage(\"Resorts\")}\r\n\t\t\t\tstyle={{ color: iconHighlight(\"Resorts\") }}\r\n\t\t\t></i>\r\n\r\n\t\t\t{resorts.length > 0 && (\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"fas fa-bell menuIcon\"\r\n\t\t\t\t\ttitle=\"Alarms\"\r\n\t\t\t\t\tonClick={() => changePage(\"Alarms\")}\r\n\t\t\t\t\tstyle={{ color: iconHighlight(\"Alarms\") }}\r\n\t\t\t\t></i>\r\n\t\t\t)}\r\n\r\n\t\t\t{resorts.length > 0 && (\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"fas fa-snowflake menuIcon\"\r\n\t\t\t\t\ttitle=\"Forecast\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tchangePage(\"Forecast\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={{ color: iconHighlight(\"Forecast\") }}\r\n\t\t\t\t></i>\r\n\t\t\t)}\r\n\r\n\t\t\t{resorts.length > 0 && (\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"fas fa-map menuIcon\"\r\n\t\t\t\t\ttitle=\"Map\"\r\n\t\t\t\t\tonClick={() => changePage(\"Map\")}\r\n\t\t\t\t\tstyle={{ color: iconHighlight(\"Map\") }}\r\n\t\t\t\t></i>\r\n\t\t\t)}\r\n      \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","const Resort = ({ resort, showResort, removeResort, setPage }) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"resort\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"resortTitle\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tshowResort(resort);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{resort.name}</h4>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{Array.isArray(resort.regions)\r\n\t\t\t\t\t\t? resort.regions[0].area\r\n\t\t\t\t\t\t: resort.regions.region.area}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"resortIcons\">\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"deleteIcon fas fa-trash-alt\"\r\n\t\t\t\t\tonClick={() => removeResort(resort.id)}\r\n\t\t\t\t></i>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tObject.keys(resort.alarms).length > 0\r\n\t\t\t\t\t\t\t? \"alarmIcon alarmOn fas fa-bell\"\r\n\t\t\t\t\t\t\t: \"alarmIcon fas fa-bell\"\r\n\t\t\t\t\t}\r\n          onClick={() => {setPage('Alarms')}}\r\n\t\t\t\t></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Resort;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"../../node_modules/axios/dist/axios.min.js\";\r\nimport Resort from \"./Resort\";\r\n\r\nconst Resorts = ({\r\n\tresorts,\r\n\tsetResorts,\r\n\topenSearch,\r\n\tsetOpenSearch,\r\n\tsetSearchInput,\r\n\tsearchInput,\r\n\tsetResortInfo,\r\n\tsetPage,\r\n}) => {\r\n\tconst [allResorts, setAllResorts] = useState([]);\r\n\r\n\t// Temporary template weather object\r\n\tconst tempWeather = {\r\n\t\tdata: {\r\n\t\t\trequest: [{ query: \"\", type: \"\" }],\r\n\t\t\tweather: [\r\n\t\t\t\t{\r\n\t\t\t\t\tastronomy: [null],\r\n\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmaxtempC: \"\",\r\n\t\t\t\t\t\t\tmaxtempF: \"\",\r\n\t\t\t\t\t\t\tmintempC: \"\",\r\n\t\t\t\t\t\t\tmintempF: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tchanceofsnow: \"\",\r\n\t\t\t\t\tdate: \"NOT CHECKED\",\r\n\t\t\t\t\thourly: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"Suny\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"10\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"6\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbottom: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcloudcover: \"\",\r\n\t\t\t\t\t\t\tfreezeLevel: \"\",\r\n\t\t\t\t\t\t\thumidity: \"\",\r\n\t\t\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tprecipInches: \"\",\r\n\t\t\t\t\t\t\tprecipMM: \"\",\r\n\t\t\t\t\t\t\tpressure: \"\",\r\n\t\t\t\t\t\t\tpressureInches: \"\",\r\n\t\t\t\t\t\t\tsnowfall_cm: \"\",\r\n\t\t\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttempC: \"\",\r\n\t\t\t\t\t\t\t\t\ttempF: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherCode: \"\",\r\n\t\t\t\t\t\t\t\t\tweatherDesc: [{ value: \"\" }],\r\n\t\t\t\t\t\t\t\t\tweatherIconUrl: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\twinddir16Point: \"\",\r\n\t\t\t\t\t\t\t\t\twinddirDegree: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedKmph: \"\",\r\n\t\t\t\t\t\t\t\t\twindspeedMiles: \"\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tvisibility: \"\",\r\n\t\t\t\t\t\t\tvisibilityMiles: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tmid: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmaxtempC: \"\",\r\n\t\t\t\t\t\t\tmaxtempF: \"\",\r\n\t\t\t\t\t\t\tmintempC: \"\",\r\n\t\t\t\t\t\t\tmintempF: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\ttop: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmaxtempC: \"\",\r\n\t\t\t\t\t\t\tmaxtempF: \"\",\r\n\t\t\t\t\t\t\tmintempC: \"\",\r\n\t\t\t\t\t\t\tmintempF: \"\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\ttotalSnowfall_cm: \"\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Retrieve static resort information from ../public/Resorts.json and set them as allResorts state\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"Resorts.json\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetAllResorts(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => alert(\"Error retrieving resorts.json\"));\r\n\t}, []);\r\n\r\n\t// Adds a new resort from search after checking for duplication\r\n\tconst addResort = (resort) => {\r\n\t\tif (!resorts.find(({ id }) => id === resort.id)) {\r\n      const newResort = {\r\n\t\t\t...resort,\r\n\t\t\talarms: [],\r\n\t\t\tweather: tempWeather,\r\n\t\t\tlastCheck: 0,\r\n\t\t};\r\n\t\t\tsetResorts([\r\n\t\t\t\t...resorts,\r\n\t\t\t\tnewResort,\r\n\t\t\t]);\r\n      setResortInfo(newResort);\r\n\t\t}\r\n\t};\r\n\r\n\t// Shows resort details upon selecting a saved resort from resort list\r\n\tconst showResort = (resort) => {\r\n\t\tsetResortInfo(resort);\r\n\t\tsetPage(\"ResortInfo\");\r\n\t};\r\n\r\n\t// Removes saved resorts\r\n\tconst removeResort = (id) => {\r\n\t\tsetResorts((resorts) => {\r\n\t\t\treturn resorts.filter((resort) => resort.id !== id);\r\n\t\t});\r\n\t};\r\n\r\n\t// Checks the resort search input for changes and updates the results list\r\n\tconst handleChange = (e) => {\r\n\t\tsetSearchInput(e.target.value);\r\n\t};\r\n\tconst filteredResorts = allResorts.filter((resort) =>\r\n\t\tresort.name.toLowerCase().includes(searchInput.toLowerCase())\r\n\t);\r\n\tconst selected = (resortId) => {\r\n\t\tlet includes;\r\n\t\tresorts.forEach((resort) => {\r\n\t\t\tif (resort.id == resortId) {\r\n\t\t\t\tincludes = \"includes\";\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn includes;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"main resorts\">\r\n\t\t\t<div className=\"resortList\">\r\n\t\t\t<h1>Resorts</h1>\r\n\t\t\t\t{resorts.length > 0 ? (\r\n\t\t\t\t\tresorts.map((resort) => (\r\n\t\t\t\t\t\t<Resort\r\n\t\t\t\t\t\t\tkey={resort.id}\r\n\t\t\t\t\t\t\tresort={resort}\r\n\t\t\t\t\t\t\tshowResort={showResort}\r\n\t\t\t\t\t\t\tremoveResort={removeResort}\r\n\t\t\t\t\t\t\tsetPage={setPage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p className=\"noResortsAdded\">\r\n\t\t\t\t\t\tThis app is designed to be used on a mobile device <br></br>\r\n\t\t\t\t\t\tAdd a resort using the + icon below\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<i\r\n\t\t\t\tclassName={\r\n\t\t\t\t\topenSearch\r\n\t\t\t\t\t\t? \"circleMenuButton remove fas fa-plus\"\r\n\t\t\t\t\t\t: \"circleMenuButton fas fa-plus\"\r\n\t\t\t\t}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (openSearch) {\r\n\t\t\t\t\t\tsetOpenSearch(false);\r\n\t\t\t\t\t\tsetSearchInput(\"\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetOpenSearch(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Add resort(s)\"\r\n\t\t\t></i>\r\n\r\n\t\t\t<div className={openSearch ? \"slideUp addResort\" : \"addResort\"}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"resortSearchBox\"\r\n\t\t\t\t\tplaceholder=\"Enter a resort\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"searchResults\">\r\n\t\t\t\t\t{searchInput.length > 0\r\n\t\t\t\t\t\t? filteredResorts.map((resort) => (\r\n\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\tkey={resort.id}\r\n\t\t\t\t\t\t\t\t\tonClick={() => addResort(resort)}\r\n\t\t\t\t\t\t\t\t\tclassName={selected(resort.id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{resort.name}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t: \"\"}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Resorts;\r\n","const Resort = ({\r\n\tresort,\r\n\talarm,\r\n\tshowResort,\r\n\tremoveResort,\r\n\ttoggleAlarm,\r\n\tremoveAlarm,\r\n\tforecastConditions,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={alarm.toggled ? \"alarm\" : \"alarm alarmOff\"}>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"alarmTitle\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tconsole.log(\"View alarm\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h4>{resort.name}</h4>\r\n\t\t\t\t<div className=\"alarmDetails\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{forecastConditions.map((condition) =>\r\n\t\t\t\t\t\t\talarm.value === condition.value\r\n\t\t\t\t\t\t\t\t? condition.title +\r\n\t\t\t\t\t\t\t\t  \" : \" +\r\n\t\t\t\t\t\t\t\t  alarm.limit\r\n\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"alarmIcons\">\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"deleteIcon fas fa-trash-alt\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tremoveAlarm(resort.id, alarm.id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></i>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\talarm.toggled\r\n\t\t\t\t\t\t\t? \"alarmToggle alarmToggleOn fas fa-toggle-on\"\r\n\t\t\t\t\t\t\t: \"alarmToggle fas fa-toggle-on\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\ttoggleAlarm(resort.id, alarm.id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Resort;\r\n","const NewAlarmCondition = ({\r\n\tforecastConditions,\r\n\tconditions,\r\n\tsetConditions,\r\n}) => {\r\n\tconst handleChange = (event) => {\r\n\t\tsetConditions(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"newAlarmCondition\">\r\n\t\t\t<p>Weather condition:</p>\r\n\t\t\t<select\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\thandleChange(e);\r\n\t\t\t\t}}\r\n\t\t\t\tid=\"weather condition\"\r\n        value={conditions}\r\n\t\t\t>\r\n\t\t\t\t{forecastConditions.map((condition) => (\r\n\t\t\t\t\t<option key={condition.title} value={condition.value}>\r\n\t\t\t\t\t\t{condition.title}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewAlarmCondition;\r\n","const NewAlarmAmount = ({\r\n\tamount, setAmount,\r\n\tconditions,\r\n\tforecastConditions,\r\n}) => {\r\n\tconst handleChange = (event) => {\r\n\t\tsetAmount(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"newAlarmAmount\">\r\n\t\t\t<p>\r\n\t\t\t\tUnits in\r\n\t\t\t\t{forecastConditions.map((con) =>\r\n\t\t\t\t\tcon.value === conditions ? \" \" + con.unit : \"\"\r\n\t\t\t\t)}\r\n\t\t\t\t:\r\n\t\t\t</p>\r\n\t\t\t{conditions === \"winddir16Point\" ? (\r\n\t\t\t\t<p>North=0 East=90 South=180 West=270</p>\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tname=\"amount\"\r\n\t\t\t\tvalue={amount}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\thandleChange(e);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewAlarmAmount;\r\n","const Hour = ({ unit }) => {\r\n\r\n  const checkUnit = () => {\r\n    if (unit == 0) {\r\n      unit = \"0\"\r\n    }\r\n    return unit\r\n  }\r\n\r\n  return <div className=\"hour\">{checkUnit()}</div>;\r\n}\r\n\r\nexport default Hour\r\n","import Hour from \"./Hour\";\r\n\r\nconst Hourly = ({ weather, title, param, hours }) => {\r\n\r\n  const getParam = (hour) => {\r\n    let output = Object.entries(hour).filter(([key, value]) => \r\n      key === param\r\n    )\r\n    return output[0][1]\r\n  }\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"hourlyDiv\">\r\n\t\t\t<h3>{title}</h3>\r\n\t\t\t<div className={title}>\r\n\t\t\t\t<div className=\"hourly hours\">\r\n\t\t\t\t\t<p>Time</p>\r\n\t\t\t\t\t{hours.map((hour) => (\r\n\t\t\t\t\t\t<Hour key={hour} unit={hour} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"hourly\">\r\n\t\t\t\t\t<p>Peak</p>\r\n\t\t\t\t\t{weather.hourly.map((hour) => (\r\n\t\t\t\t\t\t<Hour\r\n\t\t\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t\t\t\tunit={getParam(hour.top[0])}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"hourly\">\r\n\t\t\t\t\t<p>Mid</p>\r\n\t\t\t\t\t{weather.hourly.map((hour) => (\r\n\t\t\t\t\t\t<Hour\r\n\t\t\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t\t\t\tunit={getParam(hour.mid[0])}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"hourly\">\r\n\t\t\t\t\t<p>Base</p>\r\n\t\t\t\t\t{weather.hourly.map((hour) => (\r\n\t\t\t\t\t\t<Hour\r\n\t\t\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t\t\t\tunit={getParam(hour.bottom[0])}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Hourly;\r\n","import NewAlarmCondition from \"./NewAlarmCondition\";\r\nimport NewAlarmAmount from \"./NewAlarmAmount\";\r\nimport Hourly from \"./Hourly\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewAlarm = ({\r\n\tnewAlarm,\r\n\tsetNewAlarm,\r\n\tresort,\r\n  resorts,\r\n\tsetResorts,\r\n\tforecastConditions,\r\n}) => {\r\n\r\n\tconst [conditions, setConditions] = useState(forecastConditions[0].value);\r\n\tconst [amount, setAmount] = useState(null);\r\n\r\n  // Creates a new alarm using the state above\r\n  const handleSubmit = () => {\r\n    const pushAlarm = (res) => {\r\n      const alarm = {\r\n          id: res.alarms.length + 1, \r\n\t\t\t\t\ttoggled: true,\r\n\t\t\t\t\tvalue: conditions,\r\n\t\t\t\t\tlimit: amount\r\n        }\r\n      res.alarms.push(alarm)\r\n      return res\r\n    }\r\n    !amount ? alert('Please fill out all alarm details before submitting') :\r\n    setResorts(() => {\r\n      return resorts.map((res) => (\r\n        res.id !== resort.id ? res :\r\n        pushAlarm(res)\r\n      ))\r\n    })\r\n    setNewAlarm(false)\r\n    setConditions(forecastConditions[0].value)\r\n    setAmount(null)\r\n  }\r\n  \r\n  // Constants used for alarm variables\r\n  const weather = resort.weather.data.weather[0];\r\n\tconst hours = [\"12am\", \"3am\", \"6am\", \"9am\", \"12pm\", \"3pm\", \"6pm\", \"9pm\"];\r\n\r\n  // Shows recent forecast conditions while choosing a value according to the selected parameter\r\n  const addRecentConditions = () => {\r\n\t\tif (\r\n\t\t\tconditions === \"totalSnowfall_cm\" ||\r\n\t\t\tconditions === \"winddir16Point\"\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t} else if (conditions === \"windspeedKmph\" || conditions === \"tempC\") {\r\n\t\t\treturn <Hourly weather={weather} title={conditions} param={conditions} hours={hours} />;\r\n\t\t}\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className={newAlarm ? \"slideUp newAlarm\" : \"newAlarm\"}>\r\n\t\t\t{addRecentConditions()}\r\n\t\t\t<div className=\"newAlarmHeader\">\r\n\t\t\t\t<h4>New Alarm</h4>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"fas fa-times\"\r\n\t\t\t\t\ttitle=\"Exit\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetNewAlarm(false);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></i>\r\n\t\t\t</div>\r\n\t\t\t<h4>{resort.name}</h4>\r\n\t\t\t<div className=\"newAlarmDetails\">\r\n\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t<NewAlarmCondition\r\n\t\t\t\t\t\tforecastConditions={forecastConditions}\r\n\t\t\t\t\t\tconditions={conditions}\r\n\t\t\t\t\t\tsetConditions={setConditions}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NewAlarmAmount\r\n\t\t\t\t\t\tforecastConditions={forecastConditions}\r\n\t\t\t\t\t\tconditions={conditions}\r\n\t\t\t\t\t\tamount={amount}\r\n\t\t\t\t\t\tsetAmount={setAmount}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"fas fa-check\"\r\n\t\t\t\t\ttitle=\"Save this alarm\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\thandleSubmit();\r\n\t\t\t\t\t}}\r\n\t\t\t\t></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewAlarm;\r\n","import { useState } from \"react\";\r\nimport Alarm from \"./Alarm\";\r\nimport NewAlarm from \"./NewAlarm\";\r\n\r\nconst Alarms = ({\r\n\tresorts,\r\n\tsetResorts,\r\n  resort,\r\n  setResortInfo,\r\n\tshowList,\r\n\tsetShowList,\r\n\tforecastConditions,\r\n}) => {\r\n\r\n  const [newAlarm, setNewAlarm] = useState(false)\r\n\r\n\t// Switches saved alarms on and off without deleting them\r\n\r\n\tconst toggleAlarm = (resortId, alarmId) => {\r\n\t\tconst alarmMap = (resort) => {\r\n\t\t\tlet newAlarms = resort.alarms.map((alarm) =>\r\n\t\t\t\talarm.id !== alarmId\r\n\t\t\t\t\t? alarm\r\n\t\t\t\t\t: { ...alarm, toggled: !alarm.toggled }\r\n\t\t\t);\r\n\t\t\treturn { ...resort, alarms: newAlarms };\r\n\t\t};\r\n\t\tsetResorts((resorts) => {\r\n\t\t\treturn resorts.map((resort) =>\r\n\t\t\t\tresort.id !== resortId ? resort : alarmMap(resort)\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t// Deletes saved alarms\r\n\r\n\tconst removeAlarm = (resortId, alarmId) => {\r\n\t\tlet alarmMap = (resort) => {\r\n\t\t\tlet newAlarms = resort.alarms.filter(\r\n\t\t\t\t(alarm) => alarm.id !== alarmId\r\n\t\t\t);\r\n\t\t\treturn { ...resort, alarms: newAlarms };\r\n\t\t};\r\n\t\tsetResorts((resorts) => {\r\n\t\t\treturn resorts.map((resort) =>\r\n\t\t\t\tresort.id !== resortId ? resort : alarmMap(resort)\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst addAlarm = (resort) => {\r\n\t\tsetResortInfo(resort);\r\n\t\tsetShowList(false);\r\n    setNewAlarm(true)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"main alarms\">\r\n\t\t\t<div className=\"alarmsList\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tnewAlarm || showList ? \"hidePage hidden\" : \"hidePage\"\r\n\t\t\t\t\t}\r\n\t\t\t\t></div>\r\n\t\t\t\t<h1>Alarms</h1>\r\n\t\t\t\t{resorts.length > 0 ? (\r\n\t\t\t\t\tresorts.map((resort) =>\r\n\t\t\t\t\t\tresort.alarms.length > 0\r\n\t\t\t\t\t\t\t? resort.alarms.map((alarm) => (\r\n\t\t\t\t\t\t\t\t\t<Alarm\r\n\t\t\t\t\t\t\t\t\t\tkey={alarm.id}\r\n\t\t\t\t\t\t\t\t\t\tresort={resort}\r\n\t\t\t\t\t\t\t\t\t\talarm={alarm}\r\n\t\t\t\t\t\t\t\t\t\ttoggleAlarm={toggleAlarm}\r\n\t\t\t\t\t\t\t\t\t\tremoveAlarm={removeAlarm}\r\n\t\t\t\t\t\t\t\t\t\tforecastConditions={forecastConditions}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p className=\"noResortsAdded\">\r\n\t\t\t\t\t\tAdd a resort using the + icon below\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<i\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tshowList\r\n\t\t\t\t\t\t? \"circleMenuButton remove fas fa-plus \"\r\n\t\t\t\t\t\t: \"circleMenuButton fas fa-plus \"\r\n\t\t\t\t}\r\n\t\t\t\tstyle={\r\n\t\t\t\t\tnewAlarm\r\n\t\t\t\t\t\t? { visibility: \"hidden\", opacity: \"0\" }\r\n\t\t\t\t\t\t: { visibility: \"visible\", opacity: \"1\" }\r\n\t\t\t\t}\r\n\t\t\t\ttitle=\"Add Alarm\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tshowList ? setShowList(false) : setShowList(true);\r\n\t\t\t\t}}\r\n\t\t\t></i>\r\n\r\n\t\t\t<div className={showList ? \"slideUp list\" : \"list\"}>\r\n\t\t\t\t{resorts.map((resort) => (\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tkey={resort.id}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\taddAlarm(resort);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{resort.name}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t<NewAlarm\r\n\t\t\t\tresort={resort}\r\n\t\t\t\tforecastConditions={forecastConditions}\r\n\t\t\t\tresorts={resorts}\r\n\t\t\t\tsetResorts={setResorts}\r\n\t\t\t\tnewAlarm={newAlarm}\r\n\t\t\t\tsetNewAlarm={setNewAlarm}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Alarms;\r\n","const Updated = ({ resort, weather }) => {\r\n\treturn (\r\n\t\t<div className='updated'>\r\n\t\t\tLast updated {Math.floor((Date.now() - resort.lastCheck) / 60000)}\r\n\t\t\t{Math.floor((Date.now() - resort.lastCheck) / 60000) !== 1\r\n\t\t\t\t? \" minutes \"\r\n\t\t\t\t: \" minute \"}\r\n\t\t\tago on {weather.date}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Updated;\r\n","import Hour from \"./Hour\";\r\n\r\nconst WindDirection = ({ weather, title, param, hours}) => {\r\n\r\n  const getParam = (hour) => {\r\n\t\tlet output = Object.entries(hour).filter(\r\n\t\t\t([key, value]) => key === param\r\n\t\t);\r\n\t\treturn output[0][1];\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className=\"windDirection\">\r\n\t\t\t<h3>{title}</h3>\r\n\t\t\t<div className={title}>\r\n\t\t\t\t<div className=\"hourly hours\">\r\n\t\t\t\t\t<p>Time</p>\r\n\t\t\t\t\t{hours.map((hour) => (\r\n\t\t\t\t\t\t<Hour key={hour} unit={hour} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"hourly unit\">\r\n\t\t\t\t\t<p>Peak</p>\r\n\t\t\t\t\t{weather.hourly.map((hour) => (\r\n\t\t\t\t\t\t<Hour\r\n\t\t\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t\t\t\tunit={getParam(hour.top[0])}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WindDirection;\r\n","const ForecastSelector = ({ resort, resorts, setResort }) => {\r\n\tconst changeResort = (direction) => {\r\n\t\tconst current = resorts.indexOf(resort);\r\n\t\tif (direction === \"next\") {\r\n\t\t\tif (current === resorts.length - 1) {\r\n\t\t\t\tsetResort(resorts[0]);\r\n\t\t\t} else {\r\n\t\t\t\tsetResort(resorts[current + 1]);\r\n\t\t\t}\r\n\t\t} else if (direction === \"prev\") {\r\n\t\t\tif (current === 0) {\r\n\t\t\t\tsetResort(resorts[resorts.length - 1]);\r\n\t\t\t} else {\r\n\t\t\t\tsetResort(resorts[current - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"forecastSelector\">\r\n\t\t\t{resorts.length > 1 && (\r\n\t\t\t\t<div className=\"selectLeft\">\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"fas fa-arrow-left\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tchangeResort(\"prev\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></i>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className=\"forecastName\">{resort.name}</div>\r\n      \r\n\t\t\t{resorts.length > 1 && (\r\n\t\t\t\t<div className=\"selectRight\">\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"fas fa-arrow-right\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tchangeResort(\"next\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></i>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ForecastSelector;\r\n","import Hourly from \"./Hourly\";\r\nimport Updated from \"./Updated\";\r\nimport WindDirection from \"./WindDirection\";\r\nimport ForecastSelector from \"./ForecastSelector\";\r\n\r\nconst Forecast = ({ resort, setResort, resorts, forecastConditions }) => {\r\n\tconst weather = resort.weather.data.weather[0];\r\n\r\n\tconst hours = [\"12am\", \"3am\", \"6am\", \"9am\", \"12pm\", \"3pm\", \"6pm\", \"9pm\"];\r\n\r\n\treturn (\r\n\t\t<section className=\"forecast main\">\r\n\t\t\t<h1>Forecast</h1>\r\n\t\t\t<ForecastSelector\r\n\t\t\t\tresort={resort}\r\n\t\t\t\tresorts={resorts}\r\n\t\t\t\tsetResort={setResort}\r\n\t\t\t/>\r\n\t\t\t{resort.lastCheck > 0 ? (\r\n\t\t\t\t<Updated resort={resort} weather={weather} hours={hours} />\r\n\t\t\t) : (\r\n\t\t\t\t\"Retrieving forecast, please wait\"\r\n\t\t\t)}\r\n\t\t\t<h1>24h Chance of snow: {weather.chanceofsnow}%</h1>\r\n\t\t\t{weather.chanceofsnow > 0 ? (\r\n\t\t\t\t<h1>Expected snowfall: {weather.totalSnowfall_cm}cm</h1>\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\r\n\t\t\t{forecastConditions\r\n\t\t\t\t.filter((condition) => condition.value !== 'totalSnowfall_cm')\r\n\t\t\t\t.map((condition) =>\r\n\t\t\t\t\tcondition.title == \"Wind Direction\" ? (\r\n\t\t\t\t\t\t<WindDirection\r\n\t\t\t\t\t\t\ttitle={condition.title}\r\n\t\t\t\t\t\t\tweather={weather}\r\n\t\t\t\t\t\t\tparam={condition.value}\r\n\t\t\t\t\t\t\thours={hours}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Hourly\r\n\t\t\t\t\t\t\ttitle={condition.title}\r\n\t\t\t\t\t\t\tweather={weather}\r\n\t\t\t\t\t\t\tparam={condition.value}\r\n\t\t\t\t\t\t\thours={hours}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Forecast;\r\n","const Map = ({\r\n\tresort,\r\n\tresortMap,\r\n\tresorts,\r\n\tsetMap,\r\n\tshowList,\r\n\tsetShowList,\r\n}) => {\r\n\tconst returnMap = (link) => {\r\n\t\tif (link.image.url == null) {\r\n\t\t\treturn link.sizes[0].url;\r\n\t\t} else {\r\n\t\t\treturn link.image.url;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"main map\">\r\n\t\t\t<div\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tshowList ? \"hidePage hidden\" : \"hidePage\"\r\n\t\t\t\t}\r\n\t\t\t></div>\r\n\t\t\t<h1>Maps</h1>\r\n\t\t\t<p>{resort.name}</p>\r\n\r\n\t\t\t<i\r\n\t\t\t\tclassName=\"circleMenuButton fas fa-images\"\r\n\t\t\t\ttitle=\"Change Map\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tshowList ? setShowList(false) : setShowList(true);\r\n\t\t\t\t}}\r\n\t\t\t></i>\r\n\r\n\t\t\t<div className=\"mapImage\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref={resortMap.original.url}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\ttitle=\"Click to see large version\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={returnMap(resortMap)}\r\n\t\t\t\t\t\talt={resort.name + \" Map\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className=\"mapFooter\" href={resortMap.original.url}>\r\n\t\t\t\t\tPinch to zoom or click to view high resolution\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={showList ? \"slideUp list\" : \"list\"}>\r\n\t\t\t\t{resorts.map((resort) => (\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tkey={resort.id}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetMap(resort);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{resort.name}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","const ResortInfo = ({ resort, viewMap, setPage }) => {\r\n\r\n  return (\r\n    <section className='main resortInfo'>\r\n      <h1>{resort.name}</h1>\r\n      <h4>{Array.isArray(resort.regions) ? resort.regions[0].area\r\n                                        : resort.regions.region.area}</h4>\r\n\t\t\t<a className='resortWebsite' href={resort.officialWebsite}>{resort.officialWebsite}</a>\r\n      <a className='viewMap' onClick={() => {viewMap(resort)}}>View Map</a>\r\n      <a className='viewForecast' onClick={() => {setPage('Forecast')}}>View Forecast</a>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ResortInfo\r\n","import { useState, useEffect } from \"react\";\nimport axios from \"../node_modules/axios/dist/axios.min.js\";\n\nimport \"./Styles/style.css\";\n\n// Component imports //\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport Resorts from \"./Components/Resorts\";\nimport Alarms from \"./Components/Alarms\";\nimport Forecast from \"./Components/Forecast\";\nimport Map from \"./Components/Map\";\nimport ResortInfo from \"./Components/ResortInfo\";\n\nfunction App() {\n\tconst [page, setPage] = useState(\"Resorts\");\n\tconst [resorts, setResorts] = useState([]);\n\tconst [searchInput, setSearchInput] = useState(\"\");\n\tconst [searchBox, setSearchBox] = useState(false);\n\tconst [resortInfo, setResortInfo] = useState(\"\");\n\tconst [resortMap, setResortMap] = useState(\"\");\n\tconst [showList, setShowList] = useState(false);\n\n\t// Loading localstorage data\n\tuseEffect(() => {\n\t\tconst data1 = localStorage.getItem(\"resorts\");\n\t\tif (data1) {\n\t\t\tsetResorts(JSON.parse(data1));\n\t\t}\n\t\tconst data2 = localStorage.getItem(\"resortInfo\");\n\t\tif (data2) {\n\t\t\tsetResortInfo(JSON.parse(data2));\n\t\t}\n\t}, []);\n\n\t// Setting localstorage data\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"resorts\", JSON.stringify(resorts));\n\t\tlocalStorage.setItem(\"resortInfo\", JSON.stringify(resortInfo));\n\t});\n\n\t// API KEYS\n\tconst worldWeatherOnlineKey = `9452199cce494ac2a42203118212706`;\n\n\t// Retrieve resort map info and set resortMap as the current image state to be used in the map page\n\tuseEffect(() => {\n\t\tresorts.length > 0 &&\n\t\t\taxios\n\t\t\t\t.get(`https://skimap.org/SkiAreas/view/${resortInfo.id}.json`)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetResortMap(res.data.ski_maps[0].media);\n\t\t\t\t})\n\t\t\t\t.catch((error) =>\n\t\t\t\t\talert(`Unable to find map for ${resortInfo.name}`)\n\t\t\t\t);\n\t}, [resortInfo]);\n\n\t// Upon change of the current resort in focus, check and update weather information\n\tuseEffect(() => {\n\t\t// Calls the updateLastCheck function then updates the weather information\n\t\tconst getWeather = () => {\n\t\t\tlet lat = parseFloat(resortInfo.georeferencing.lat).toFixed(2);\n\t\t\tlet lng = parseFloat(resortInfo.georeferencing.lng).toFixed(2);\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t`https://api.worldweatheronline.com/premium/v1/ski.ashx?key=${worldWeatherOnlineKey}&q=${lat},${lng}&format=json`\n\t\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst updatedResort = {\n\t\t\t\t\t\t...resortInfo,\n\t\t\t\t\t\tweather: res.data,\n\t\t\t\t\t\tlastCheck: Date.now(),\n\t\t\t\t\t};\n\t\t\t\t\tsetResorts(() => {\n\t\t\t\t\t\treturn resorts.map((resort) =>\n\t\t\t\t\t\t\tresort.id === updatedResort.id\n\t\t\t\t\t\t\t\t? updatedResort\n\t\t\t\t\t\t\t\t: resort\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetResortInfo(updatedResort);\n\t\t\t\t})\n\t\t\t\t.catch((error) => () => {\n\t\t\t\t\talert(\n\t\t\t\t\t\t`Unable to retrieve weather information for ${resortInfo.name}`\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t};\n\t\t// Checks whether the forecast has been updated for this resort within the last hour\n\t\tDate.now() - resortInfo.lastCheck > 3600000\n\t\t\t? getWeather()\n\t\t\t: console.log(\"Weather info updated within the last hour\");\n\t}, [page, resortInfo]);\n\n\t// Opens the map page with the selected resorts map\n\tconst viewMap = (resort) => {\n\t\tsetResortInfo(resort);\n\t\tsetShowList(false);\n\t\tsetPage(\"Map\");\n\t};\n\n\t// Closes searches and popups upon page change\n\tconst closePopUps = () => {\n\t\tsetShowList(false);\n\t\tsetSearchBox(false);\n\t};\n\n\t// Array of forecast conditions to check and to use in the Alarms component\n\tconst forecastConditions = [\n\t\t{ title: \"24h Snowfall (cm)\", value: \"totalSnowfall_cm\", unit: \"cm\" },\n\t\t{ title: \"Temperature (°C)\", value: \"tempC\", unit: \"°C\" },\n\t\t{ title: \"Windspeed (Kmph)\", value: \"windspeedKmph\", unit: \"Kmph\" },\n\t\t{ title: \"Wind Direction\", value: \"winddir16Point\", unit: \"degrees\" },\n\t];\n\n\t// Switch statement to handle page changes in a more readable manner which is then handled by App.js return\n\tconst renderSwitch = (page) => {\n\t\tswitch (page) {\n\t\t\tcase \"Resorts\":\n\t\t\t\treturn (\n\t\t\t\t\t<Resorts\n\t\t\t\t\t\tresorts={resorts}\n\t\t\t\t\t\tsetResorts={setResorts}\n\t\t\t\t\t\topenSearch={searchBox}\n\t\t\t\t\t\tsetOpenSearch={setSearchBox}\n\t\t\t\t\t\tsetSearchInput={setSearchInput}\n\t\t\t\t\t\tsearchInput={searchInput}\n\t\t\t\t\t\tsetResortInfo={setResortInfo}\n\t\t\t\t\t\tsetPage={setPage}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase \"Alarms\":\n\t\t\t\treturn (\n\t\t\t\t\t<Alarms\n\t\t\t\t\t\tresorts={resorts}\n\t\t\t\t\t\tsetResorts={setResorts}\n\t\t\t\t\t\tresort={resortInfo}\n\t\t\t\t\t\tsetResortInfo={setResortInfo}\n\t\t\t\t\t\tshowList={showList}\n\t\t\t\t\t\tsetShowList={setShowList}\n\t\t\t\t\t\tforecastConditions={forecastConditions}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase \"Forecast\":\n\t\t\t\treturn (\n\t\t\t\t\t<Forecast\n\t\t\t\t\t\tresort={resortInfo}\n\t\t\t\t\t\tsetResort={setResortInfo}\n\t\t\t\t\t\tresorts={resorts}\n\t\t\t\t\t\tforecastConditions={forecastConditions}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase \"Map\":\n\t\t\t\treturn (\n\t\t\t\t\t<Map\n\t\t\t\t\t\tresort={resortInfo}\n\t\t\t\t\t\tresortMap={resortMap}\n\t\t\t\t\t\tresorts={resorts}\n\t\t\t\t\t\tsetMap={viewMap}\n\t\t\t\t\t\tshowList={showList}\n\t\t\t\t\t\tsetShowList={setShowList}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase \"ResortInfo\":\n\t\t\t\treturn (\n\t\t\t\t\t<ResortInfo\n\t\t\t\t\t\tresort={resortInfo}\n\t\t\t\t\t\tviewMap={viewMap}\n\t\t\t\t\t\tsetPage={setPage}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"appWrapper\">\n\t\t\t<div className=\"snowWoke\">\n\t\t\t\t<Header />\n\t\t\t\t{renderSwitch(page)}\n\t\t\t\t<Footer\n\t\t\t\t\tresorts={resorts}\n\t\t\t\t\tchangePage={setPage}\n\t\t\t\t\tcurrentPage={page}\n\t\t\t\t\tclosePopUps={closePopUps}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}